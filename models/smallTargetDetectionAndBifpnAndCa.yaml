# YOLOv5 ðŸš€ by Ultralytics, GPL-3.0 license

# Parameters
nc: 4  # number of classes
depth_multiple: 0.33  # model depth multiple
width_multiple: 0.50  # layer channel multiple
anchors:
  - [5,6, 8,14, 15,11]  # P2/4
  - [10,13, 16,30, 33,23]  # P3/8
  - [30,61, 62,45, 59,119]  # P4/16
  - [116,90, 156,198, 373,326]  # P5/32


# YOLOv5 v6.0 backbone
backbone:
  # [from, number, module, args]
  [[-1, 1, Conv, [64, 6, 2, 2]],  # 0-P1/2
   [-1, 1, Conv, [128, 3, 2]],  # 1-P2/4
   [-1, 3, C3, [128]],
   [-1, 1, Conv, [256, 3, 2]],  # 3-P3/8
   [-1, 6, C3, [256]],
   [-1, 1, Conv, [512, 3, 2]],  # 5-P4/16
   [-1, 9, C3, [512]],
   [-1, 1, Conv, [1024, 3, 2]],  # 7-P5/32
   [-1, 3, C3, [1024]],
   [ -1, 1, CoordAtt,[ 1024 ] ],
   [-1, 1, SPPF, [1024, 5]],  # 10
  ]

# YOLOv5 v6.0 head
head:
  [ [ -1, 1, Conv, [ 512, 1, 1 ] ],  #20*20
    [ -1, 1, nn.Upsample, [ None, 2, 'nearest' ] ], #40*40
    [[-1, 6], 1, BiFPN_Concat2, [1]],  # cat backbone P4  40*40
    [ -1, 3, C3, [ 512, False ] ],  #14  40*40

    [ -1, 1, Conv, [ 512, 1, 1 ] ], #40*40
    [ -1, 1, nn.Upsample, [ None, 2, 'nearest' ] ],
    [[-1, 4], 1, BiFPN_Concat2, [1]],   # cat backbone P3  80*80
    [ -1, 3, C3, [ 512, False ] ],  #18  80*80

    [ -1, 1, Conv, [ 256, 1, 1 ] ], #19  80*80
    [ -1, 1, nn.Upsample, [ None, 2, 'nearest' ] ], #20  160*160  --> further upsampling for the tiny object
    [ [ -1, 2 ], 1, BiFPN_Concat2, [ 1 ] ], #21 cat backbone p2  160*160
    [ -1, 3, C3, [ 256, False ] ], #22 (P2/4-tiny) 160*160

    [ -1, 1, Conv, [ 256, 3, 2 ] ],  #23  80*80
    [ [ -1, 19 ], 1, BiFPN_Concat2, [ 1 ] ], #24  80*80
    [ -1, 3, C3, [ 256, False ] ], #25 (P3/8-small) 80*80

    [ -1, 1, Conv, [ 256, 3, 2 ] ], #26  40*40
   [[-1, 15, 6], 1, BiFPN_Concat3, [1]], # 27  cat head P4  40*40
    [ -1, 3, C3, [ 512, False ] ],  # 28 (P4/16-medium) 40*40

    [ -1, 1, Conv, [ 512, 3, 2 ] ],  #29  20*20
    [[-1, 11], 1, BiFPN_Concat2, [1]],   #30 cat head P5  #20*20
    [ -1, 3, C3, [ 1024, False ] ],  # 31 (P5/32-large)  20*20

    [ [ 22, 25, 28, 31 ], 1, Detect, [ nc, anchors ] ],  # Detect(p2, P3, P4, P5)
  ]
